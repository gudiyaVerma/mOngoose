//jshint esversion:6

const express = require("express");
const bodyParser = require("body-parser");
 
const mongoose = require("mongoose");

   
   const app = express();
 
app.set("view engine", "ejs");

app.use(bodyParser.urlencoded({extended:true}));
app.use(express.static("public"));


mongoose.connect("mongodb://localhost:27017/TODOLIST",{useNewUrlParser:true});

 const itemsSchema = {
  name: String
 };

 const Item = mongoose.model("Item",itemsSchema);


 const item1 = new Item({
 name:"Welcome to your TodoList !"
 });


 const item2 = new Item({
  name:"Hit the + button to add a new item."
  });


  const item3 = new Item({
    name:"Check to delete this item."
    });


     const defaultItems = [item1,item2,item3];
   
     // new schema for new route that is different from the itemSchema

     const listSchema={
      name:String,
      items:[itemsSchema]
     };

     const List = mongoose.model("List",listSchema);

     











     app.get("/", function (req, res) {
   
    Item.find({},function(err,foundItems){

             if(foundItems.length===0){
                       Item.insertMany(defaultItems,function(err){
             if(err){
                       console.log(err);
                    }
             else{
                       console.log("Successfully saved the defaultItems to dataBase.!")
                 }
          });
          res.redirect("/");
             }
             else {
              res.render("List", { listTitle : "Today" ,newlistitems: foundItems});
             }
            });
          
          });

 app.post("/",function(req,res){
    const itemName = req.body.newItem;
    const listName = req.body.list;

   const item = new Item({
      name:itemName
   });

 if(listName === "Today"){
   item.save();
   res.redirect("/");
 } else {
   List.findOne({name: listName}, function(err, foundList){
      foundList.items.push(item);
      foundList.save();
      res.redirect("/" + listName);
   });
 }

   
 
 });

 // Deleted post 

 app.post("/delete",function(req,res){
   const checkedItemId= req.body.checkbox;

    Item.findByIdAndRemove(checkedItemId,function(err){
      if(!err){
         console.log("SuccessFully deleted the checked items");
         res.redirect("/");
      }
    });
   // console.log(req.body);
 });


 // Instead of this create dynamic route
//  app.get("/work",function(req,res){
//     res.render("List",{listTitle:"work List",newlistitems:workitems});
//  })

  // Dynamic route 

   app.get("/:customListName",function(req,res){
     const customListName= req.params.customListName;
      // console.log(req.params.customListName);
       List.findOne({name: customListName}, function(err, foundList){
         if(!err){
            if(!foundList){
                  // create a new list 
                  const list = new List ({
                     name: customListName,
                     items: defaultItems
                  });
                  list.save();
                   // console.log("Doesn't exist!");
                   res.redirect("/" + customListName);
            } else{
                // Show an existing List
                res.render("List",{ listTitle : foundList.name ,newlistitems: foundList.items})
               // console.log("exists!");
            }
         }
       });




       
   });
  
  

 app.post("/work",function(req,res){
    let item = req.body.newitem;
    workitems.push(item);
 res.redirect("/work");
 });



 app.post("/Home",function(req,res){
   let item = req.body.newitem;
   workitems.push(item);
res.redirect("/Home");
});

app.listen(3000, function () {
    console.log("server is running on port 3000");
});





//  delted item id - '6344fbb53adbe0fe0d06ae3d'
